//
// Created by 李探 on 18/4/3.
//
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <sys/system_properties.h>
#include <android/log.h>
#include <string.h>
#include <stdlib.h>

/* Header for class com_lxb_android_smartutils_SystemProperties */

#define TAG "SystemProperties"
#ifndef _Included_com_lxb_android_smartutils_SystemProperties
#define _Included_com_lxb_android_smartutils_SystemProperties
#ifdef __cplusplus

extern "C" {
#endif
/*
 * Class:     com_lxb_android_smartutils_SystemProperties
 * Method:    native_get
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL
Java_com_lxb_android_smartutils_SystemProperties_native_1get__Ljava_lang_String_2
        (JNIEnv *env, jclass clazz, jstring keyJ) {
    {
        int len;
        const char *key;
        char buf[PROP_VALUE_MAX];
        jstring rvJ = NULL;

        if (keyJ == NULL) {
            __android_log_write(ANDROID_LOG_WARN, TAG, "key must not be null.");
            goto error;
        }

        key = env->GetStringUTFChars(keyJ, NULL);

        len = __system_property_get(key, buf);
        if (len >= 0) {
            rvJ = env->NewStringUTF(buf);
        } else {
            rvJ = env->NewStringUTF("");
        }

        env->ReleaseStringUTFChars(keyJ, key);

        error:
        return rvJ;
    };
} ;

/*
 * Class:     com_lxb_android_smartutils_SystemProperties
 * Method:    native_get
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL
Java_com_lxb_android_smartutils_SystemProperties_native_1get__Ljava_lang_String_2Ljava_lang_String_2
        (JNIEnv *env, jobject clazz, jstring keyJ, jstring defJ) {
    int len;
    const char *key;
    char buf[PROP_VALUE_MAX];
    jstring rvJ = NULL;

    if (keyJ == NULL) {
        __android_log_write(ANDROID_LOG_WARN, TAG, "key must not be null.");
        goto error;
    }

    key = env->GetStringUTFChars(keyJ, NULL);

    len = __system_property_get(key, buf);
    if ((len <= 0) && (defJ != NULL)) {
        rvJ = defJ;
    } else if (len >= 0) {
        rvJ = env->NewStringUTF(buf);
    } else {
        rvJ = env->NewStringUTF("");
    }

    env->ReleaseStringUTFChars(keyJ, key);

    error:
    return rvJ;
} ;

/*
 * Class:     com_lxb_android_smartutils_SystemProperties
 * Method:    native_get_int
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_com_lxb_android_smartutils_SystemProperties_native_1get_1int
        (JNIEnv *env, jobject clazz, jstring keyJ, jint defJ) {
    int len;
    const char *key;
    char buf[PROP_VALUE_MAX];
    char *end;
    jint result = defJ;

    if (keyJ == NULL) {
        __android_log_write(ANDROID_LOG_WARN, TAG, "key must not be null.");
        goto error;
    }

    key = env->GetStringUTFChars(keyJ, NULL);

    len = __system_property_get(key, buf);
    if (len > 0) {
        result = strtol(buf, &end, 0);
        if (end == buf) {
            result = defJ;
        }
    }

    env->ReleaseStringUTFChars(keyJ, key);

    error:
    return result;
} ;

/*
 * Class:     com_lxb_android_smartutils_SystemProperties
 * Method:    native_get_long
 * Signature: (Ljava/lang/String;J)J
 */
JNIEXPORT jlong JNICALL Java_com_lxb_android_smartutils_SystemProperties_native_1get_1long
        (JNIEnv *env, jobject clazz, jstring keyJ, jlong defJ) {
    int len;
    const char *key;
    char buf[PROP_VALUE_MAX];
    char *end;
    jlong result = defJ;

    if (keyJ == NULL) {
        __android_log_write(ANDROID_LOG_WARN, TAG, "key must not be null.");
        goto error;
    }

    key = env->GetStringUTFChars(keyJ, NULL);

    len = __system_property_get(key, buf);
    if (len > 0) {
        result = strtoll(buf, &end, 0);
        if (end == buf) {
            result = defJ;
        }
    }

    env->ReleaseStringUTFChars(keyJ, key);

    error:
    return result;
} ;

/*
 * Class:     com_lxb_android_smartutils_SystemProperties
 * Method:    native_get_boolean
 * Signature: (Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_com_lxb_android_smartutils_SystemProperties_native_1get_1boolean
        (JNIEnv *env, jobject clazz, jstring keyJ, jboolean defJ) {
    int len;
    const char *key;
    char buf[PROP_VALUE_MAX];
    jboolean result = defJ;

    if (keyJ == NULL) {
        __android_log_write(ANDROID_LOG_WARN, TAG, "key must not be null.");
        goto error;
    }

    key = env->GetStringUTFChars(keyJ, NULL);

    len = __system_property_get(key, buf);
    if (len == 1) {
        char ch = buf[0];
        if (ch == '0' || ch == 'n')
            result = false;
        else if (ch == '1' || ch == 'y')
            result = true;
    } else if (len > 1) {
        if (!strcmp(buf, "no") || !strcmp(buf, "false") || !strcmp(buf, "off")) {
            result = false;
        } else if (!strcmp(buf, "yes") || !strcmp(buf, "true") || !strcmp(buf, "on")) {
            result = true;
        }
    }

    env->ReleaseStringUTFChars(keyJ, key);

    error:
    return result;
} ;

#ifdef __cplusplus
}
#endif
#endif

